"Vundle plugin and bundle initialization
set rtp+=~/.vim/vundle/
call vundle#rc()
"Github Bundles
Bundle 'benmills/vimux'
Bundle 'corntrace/bufexplorer'
Bundle 'ervandew/supertab'
Bundle 'kien/ctrlp.vim'
Bundle 'mileszs/ack.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'sjl/gundo.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-vividchalk'

"NOTE: This block was commented out in favor of 'set list'. Uncomment all
"executable lines in this block to restore tab/whitespace hilighting
"functionality.
"
"Whitespace matching: must appear before the colorscheme is set
"SUMMARY OF BEHAVIOR:
" 1) Apply to all buffers.
" 2) Match all tab characters at all times.
" 3) Inside insert mode, don't match trailing whitespace on the current line.
" 4) Outside insert mode, match all trailing whitespace on the current line.
"highlight ExtraWhitespace ctermbg=red guibg=red
"match ExtraWhitespace /\t\|\s\+$/
"if has("autocmd")
"  autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
"  autocmd BufWinEnter * match ExtraWhitespace /\t\|\s\+$/
"  autocmd InsertEnter * match ExtraWhitespace /\t\|\s\+\%#\@<!$/
"  autocmd InsertLeave * match ExtraWhitespace /\t\|\s\+$/
"  autocmd BufWinLeave * call clearmatches()
"endif

if has("gui") "Instead of gui_running, in case :gui is run manually on *NIX
  set columns=90 lines=45
  "Set the font based on OS.
  if has("unix")
    "set guifont=Terminus:h13
    set guifont=Monaco:h10
    set linespace=-1
    set noantialias
  else
    "set guifont=Tamsyn7x14
    set guifont=Terminus:h12
    source $VIMRUNTIME/mswin.vim "Enable expected keyboard shortcuts for Windows - see :help :behave
    set keymodel-=stopsel "Make Visual mode work as expected when mswin.vim is sourced
  endif
  set guioptions=egmrt "Hide toolbar by default in MacVim
  "Found at <http://support.markedapp.com/kb/how-to-tips-and-tricks/marked-bonus-pack-scripts-commands-and-bundles>
  :nnoremap <leader>m :silent !open -a Marked.app '%:p'<cr> "Bind a shortcut for opening the current document in Marked.app on Mac OS X
  if has("transparency") "Background transparency is a MacVim-specific feature, so prevent errors in other vims
    set transparency=5 "Enable background transparency in MacVim
  endif
endif

"Disable splash screen/[I]ntro message
set shortmess+=I

colorscheme Tomorrow-Night
set number
set nobackup
set nowritebackup
set background=dark
"set list "Show invisible characters by default

set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab

set bs=2 "Allow backspace to work properly
set autoindent
set smartindent
set enc=utf-8
set nowrap
hi LineNr guifg=#333333
filetype on
filetype plugin on
filetype indent on "Enable automatic indentation based on detected filetype
syntax on

"Statusline
if exists("vimpager")
  set statusline=%<%F%h%m%r%h%w%y\ %{&ff}\ %{strftime(\"%c\",getftime(expand(\"%:p\")))}\ %=\ lin:%l\/%L\ col:%c%V\ %P
else
  set statusline=%<%F%h%m%r%h%w%y\ %{&ff}\ %{strftime(\"%c\",getftime(expand(\"%:p\")))}\ %{fugitive#statusline()}\ %=\ lin:%l\/%L\ col:%c%V\ %P
endif
set laststatus=2

"Invisible (list) character colors
"highlight NonText guifg=#555555 "EOL
"highlight SpecialKey guifg=#555555 "Tab

"On Mac, map CMD-[ and CMD-] to indent while preserving any Visual mode selection as appropriate
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv

":w!! will use sudo to save a non-writable file if you forgot to do 'sudo vim' by accident
cmap w!! %!sudo tee > /dev/null %

"Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

"Function to run arbitrary commands while preserving state.
"Found at <http://technotales.wordpress.com/2010/03/31/preserve-a-vim-function-that-keeps-your-state/>
function! Preserve(command)
  "Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  "Do the business:
  execute a:command
  "Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

"Convert mixed line endings to LF-only (Unix.)
"Found at <http://vim.wikia.com/wiki/File_format>
function! ForceLF()
  :update
  :e ++ff=dos
  :setlocal ff=unix
  :w
endfunction

"NOTE - By default, <leader> is backslash.

"vimux shortcuts.
"Found at <https://raw.github.com/benmills/vimux/master/doc/vimux.txt>

"Prompt for a command to run
map <Leader>rp :VimuxPromptCommand<CR>

"Run last command executed by VimuxRunCommand
map <Leader>rl :VimuxRunLastCommand<CR>

"Inspect runner pane
map <Leader>ri :VimuxInspectRunner<CR>

"Close all other tmux panes in current window
map <Leader>rx :VimuxClosePanes<CR>

"Close vim tmux runner opened by VimuxRunCommand
map <Leader>rq :VimuxCloseRunner<CR>

"Interrupt any command running in the runner pane
map <Leader>rs :VimuxInterruptRunner<CR>

"Shortcuts for opening new splits.
"Found at <http://technotales.wordpress.com/2010/04/29/vim-splits-a-guide-to-doing-exactly-what-you-want/>
"Window
nmap <leader>sw<left>  :topleft  vnew<CR>
nmap <leader>sw<right> :botright vnew<CR>
nmap <leader>sw<up>    :topleft  new<CR>
nmap <leader>sw<down>  :botright new<CR>
"Buffer
nmap <leader>s<left>   :leftabove  vnew<CR>
nmap <leader>s<right>  :rightbelow vnew<CR>
nmap <leader>s<up>     :leftabove  new<CR>
nmap <leader>s<down>   :rightbelow new<CR>

"Shortcut to toggle NERDTree
nmap <leader>e :NERDTreeToggle<CR>

"Shorcut to toggle search hilighting
"Found at <http://vim.wikia.com/wiki/Highlight_all_search_pattern_matches>
noremap <leader>h :set hlsearch! hlsearch?<CR>

"Shortcut to toggle 'set list' (toggles invisible characters)
nmap <leader>l :set list!<CR>

"Shortcut to toggle line number visibility
nmap <leader>n :set number! number?<CR>

"Shortcut to toggle auto-indenting for code paste
"Found at <http://vim.wikia.com/wiki/Toggle_auto-indenting_for_code_paste>
nnoremap <leader>p :set invpaste paste?<CR>
set pastetoggle=<leader>p
set showmode

"Shortcut to toggle Gundo
nmap <leader>u :GundoToggle<CR>

"Shortcut to strip trailing whitespace
nmap <silent> <leader>$ :call Preserve("%s/\\s\\+$//e")<CR>

"Shortcut to auto-indent entire file
nmap <silent> <leader>= :call Preserve("normal gg=G")<CR>

"Shortcut to convert mixed line endings to LF-only (Unix)
nmap <leader>d :call ForceLF()<CR>
