// [Josh Dick's](https://github.com/joshdick/dotfiles) [Slate](https://github.com/mattr-/slate) configuration
// Inspired by [gfreezy/.slate.js](https://gist.github.com/gfreezy/6060661)

// Usage:
// Repeating any of the following commands twice will move the window to the next screen with the same orientation:
//     ctrl + cmd + up -> Maximize the window.
//     ctrl + cmd + left, ctrl + cmd + right -> Make the window occupy 1/2 of the screen vertically on the corresponding side.
//     ctrl + cmd + [1, 3, 7, 9] -> Make the window occupy 1/4 of the screen in the corresponding corner.
// ctrl + cmd + down -> Move the window to the next screen.

var doOperation = function(win, isOriented, name, options) {
    if (!win) return;
    if (isOriented(win.rect(), win.screen().visibleRect())) {
        options.screen = "next";
    }
    win.doOperation(slate.operation(name, options));
}

var positions = {
    TOP_LEFT: {
       orient: function(win) {
            doOperation(
                win,
                positions.TOP_LEFT.verify,
                "corner",
                {
                    direction: "top-left",
                    width: "screenSizeX/2",
                    height: "screenSizeY/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x && winRect.y === screenRect.y && winRect.width <= screenRect.width / 2 && winRect.height <= screenRect.height / 2; }
    },
    LEFT: {
        orient: function(win) {
            doOperation(
                win,
                positions.LEFT.verify,
                "push",
                {
                    direction: "left",
                    style: "bar-resize:screenSizeX/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x && winRect.y === screenRect.y && winRect.width === screenRect.width / 2 && winRect.height === screenRect.height; },
    },
    BOTTOM_LEFT: {
        orient: function(win) {
            doOperation(
                win,
                positions.BOTTOM_LEFT.verify,
                "corner",
                {
                    direction: "bottom-left",
                    width: "screenSizeX/2",
                    height: "screenSizeY/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x && winRect.y >= screenRect.height / 2 && winRect.width <= screenRect.width / 2 && winRect.height <= screenRect.height / 2; },
    },
    BOTTOM_RIGHT: {
        orient: function(win) {
            doOperation(
                win,
                positions.BOTTOM_RIGHT.verify,
                "corner",
                {
                    direction: "bottom-right",
                    width: "screenSizeX/2",
                    height: "screenSizeY/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x + screenRect.width / 2 && winRect.y >= screenRect.height / 2 && winRect.width <= screenRect.width / 2 && winRect.height <= screenRect.height / 2; },
    },
    RIGHT: {
        orient: function(win) {
            doOperation(
                win,
                positions.RIGHT.verify,
                "push",
                {
                  "direction": "right",
                  "style": "bar-resize:screenSizeX/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x + screenRect.width / 2 && winRect.y === screenRect.y && winRect.width === screenRect.width / 2 && winRect.height === screenRect.height; },
    },
    TOP_RIGHT: {
        orient: function(win) {
            doOperation(
                win,
                positions.TOP_RIGHT.verify,
                "corner",
                {
                    direction: "top-right",
                    width: "screenSizeX/2",
                    height: "screenSizeY/2"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.x === screenRect.x + screenRect.width / 2 && winRect.y === screenRect.y && winRect.width <= screenRect.width / 2 && winRect.height <= screenRect.height / 2; },
    },
    FULLSCREEN: {
        orient: function(win) {
            doOperation(
                win,
                positions.FULLSCREEN.verify,
                "move",
                {
                    x: "screenOriginX",
                    y: "screenOriginY",
                    width: "screenSizeX",
                    height: "screenSizeY"
                }
            );
        },
        verify: function(winRect, screenRect) { return winRect.width === screenRect.width && winRect.height === screenRect.height; },
    }
};

slate.bind("pad7:ctrl,cmd", positions.TOP_LEFT.orient);
slate.bind("left:ctrl,cmd", positions.LEFT.orient);
slate.bind("pad1:ctrl,cmd", positions.BOTTOM_LEFT.orient);
slate.bind("pad3:ctrl,cmd", positions.BOTTOM_RIGHT.orient);
slate.bind("right:ctrl,cmd", positions.RIGHT.orient);
slate.bind("pad9:ctrl,cmd", positions.TOP_RIGHT.orient);
slate.bind("up:ctrl,cmd", positions.FULLSCREEN.orient);

//Move the window to the next screen.
slate.bind("down:ctrl,cmd", function(win) {
    if (!win) return;

    var winRect = win.rect();
    var screenRect = win.screen().visibleRect();

    //If the window is already oriented in a defined position, simply reorient
    //the window using the same position to move it to the next screen.
    var needsManualOrientation = Object.keys(positions).every(function(positionName) {
        var position = positions[positionName];
        if (position.verify(winRect, screenRect)) {
            position.orient(win);
            return false;
        } else {
            return true;
        }
    });

    //If the window is not oriented in a defined position, move it to
    //the next screen, maintaining its relative position and size.
    if (needsManualOrientation) {

        var newX = (winRect.x - screenRect.x) / screenRect.width + "*screenSizeX+screenOriginX";
        var newY = (winRect.y - screenRect.y) / screenRect.height + "*screenSizeY+screenOriginY";
        var newWidth = winRect.width / screenRect.width + "*screenSizeX";
        var newHeight = winRect.height / screenRect.height + "*screenSizeY";

        win.doOperation(slate.operation("throw", {
            x: newX,
            y: newY,
            width: newWidth,
            height: newHeight,
            screen: "next"
        }));
    }

});
